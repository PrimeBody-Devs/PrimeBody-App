// Analytics configuration and environment setup\n\n// Analytics configuration interface\nexport interface AnalyticsConfig {\n  // Google Analytics 4\n  ga4: {\n    enabled: boolean;\n    measurementId?: string;\n    debugMode?: boolean;\n  };\n  \n  // Plausible Analytics\n  plausible: {\n    enabled: boolean;\n    domain?: string;\n    customDomain?: string;\n  };\n  \n  // Facebook Pixel\n  facebookPixel: {\n    enabled: boolean;\n    pixelId?: string;\n  };\n  \n  // Twitter Pixel\n  twitterPixel: {\n    enabled: boolean;\n    pixelId?: string;\n  };\n  \n  // LinkedIn Insight\n  linkedinInsight: {\n    enabled: boolean;\n    partnerId?: string;\n  };\n  \n  // Hotjar\n  hotjar: {\n    enabled: boolean;\n    hjid?: string;\n    hjsv?: string;\n  };\n  \n  // Custom analytics endpoint\n  custom: {\n    enabled: boolean;\n    endpoint?: string;\n    apiKey?: string;\n  };\n  \n  // General settings\n  general: {\n    requireConsent: boolean;\n    debugMode: boolean;\n    enableInDevelopment: boolean;\n    cookieDomain?: string;\n    cookieExpiry: number; // days\n  };\n}\n\n// Default analytics configuration\nexport const defaultAnalyticsConfig: AnalyticsConfig = {\n  ga4: {\n    enabled: !!process.env.NEXT_PUBLIC_GA4_MEASUREMENT_ID,\n    measurementId: process.env.NEXT_PUBLIC_GA4_MEASUREMENT_ID,\n    debugMode: process.env.NODE_ENV === 'development',\n  },\n  \n  plausible: {\n    enabled: !!process.env.NEXT_PUBLIC_PLAUSIBLE_DOMAIN,\n    domain: process.env.NEXT_PUBLIC_PLAUSIBLE_DOMAIN,\n    customDomain: process.env.NEXT_PUBLIC_PLAUSIBLE_CUSTOM_DOMAIN,\n  },\n  \n  facebookPixel: {\n    enabled: !!process.env.NEXT_PUBLIC_FB_PIXEL_ID,\n    pixelId: process.env.NEXT_PUBLIC_FB_PIXEL_ID,\n  },\n  \n  twitterPixel: {\n    enabled: !!process.env.NEXT_PUBLIC_TWITTER_PIXEL_ID,\n    pixelId: process.env.NEXT_PUBLIC_TWITTER_PIXEL_ID,\n  },\n  \n  linkedinInsight: {\n    enabled: !!process.env.NEXT_PUBLIC_LINKEDIN_PARTNER_ID,\n    partnerId: process.env.NEXT_PUBLIC_LINKEDIN_PARTNER_ID,\n  },\n  \n  hotjar: {\n    enabled: !!process.env.NEXT_PUBLIC_HOTJAR_ID,\n    hjid: process.env.NEXT_PUBLIC_HOTJAR_ID,\n    hjsv: process.env.NEXT_PUBLIC_HOTJAR_SV || '6',\n  },\n  \n  custom: {\n    enabled: !!process.env.NEXT_PUBLIC_ANALYTICS_ENDPOINT,\n    endpoint: process.env.NEXT_PUBLIC_ANALYTICS_ENDPOINT,\n    apiKey: process.env.NEXT_PUBLIC_ANALYTICS_API_KEY,\n  },\n  \n  general: {\n    requireConsent: process.env.NEXT_PUBLIC_REQUIRE_ANALYTICS_CONSENT === 'true',\n    debugMode: process.env.NODE_ENV === 'development',\n    enableInDevelopment: process.env.NEXT_PUBLIC_ENABLE_ANALYTICS_IN_DEV === 'true',\n    cookieDomain: process.env.NEXT_PUBLIC_COOKIE_DOMAIN,\n    cookieExpiry: parseInt(process.env.NEXT_PUBLIC_COOKIE_EXPIRY_DAYS || '365'),\n  },\n};\n\n// Analytics events configuration\nexport const analyticsEvents = {\n  // Page events\n  pageView: 'page_view',\n  pageExit: 'page_exit',\n  \n  // User engagement\n  scrollDepth: 'scroll_depth',\n  timeOnPage: 'time_on_page',\n  sectionView: 'section_view',\n  \n  // Navigation\n  linkClick: 'link_click',\n  buttonClick: 'button_click',\n  menuOpen: 'menu_open',\n  menuClose: 'menu_close',\n  \n  // Conversions\n  ctaClick: 'cta_click',\n  registrationStart: 'registration_start',\n  registrationComplete: 'registration_complete',\n  walletConnect: 'wallet_connect',\n  emailSignup: 'email_signup',\n  \n  // Content interaction\n  demoView: 'demo_view',\n  featureExplore: 'feature_explore',\n  videoPlay: 'video_play',\n  videoPause: 'video_pause',\n  videoComplete: 'video_complete',\n  \n  // Social\n  socialShare: 'social_share',\n  socialClick: 'social_click',\n  \n  // Forms\n  formStart: 'form_start',\n  formComplete: 'form_complete',\n  formError: 'form_error',\n  formAbandon: 'form_abandon',\n  \n  // Errors\n  errorOccurred: 'error_occurred',\n  networkError: 'network_error',\n  componentError: 'component_error',\n  \n  // Performance\n  performanceMetric: 'performance_metric',\n  loadTime: 'load_time',\n  renderTime: 'render_time',\n  \n  // Preferences\n  themeToggle: 'theme_toggle',\n  languageChange: 'language_change',\n  preferenceChange: 'preference_change',\n  \n  // Experiments\n  experimentView: 'experiment_view',\n  experimentConversion: 'experiment_conversion',\n} as const;\n\n// Event categories\nexport const eventCategories = {\n  engagement: 'engagement',\n  conversion: 'conversion',\n  navigation: 'navigation',\n  error: 'error',\n  performance: 'performance',\n  social: 'social',\n  content: 'content',\n  form: 'form',\n  preference: 'preference',\n  experiment: 'experiment',\n} as const;\n\n// User properties configuration\nexport const userProperties = {\n  // Demographics\n  userId: 'user_id',\n  userType: 'user_type',\n  registrationDate: 'registration_date',\n  \n  // Technical\n  deviceType: 'device_type',\n  browser: 'browser',\n  os: 'operating_system',\n  screenResolution: 'screen_resolution',\n  language: 'language',\n  timezone: 'timezone',\n  \n  // Acquisition\n  referrer: 'referrer',\n  utmSource: 'utm_source',\n  utmMedium: 'utm_medium',\n  utmCampaign: 'utm_campaign',\n  utmTerm: 'utm_term',\n  utmContent: 'utm_content',\n  \n  // Behavioral\n  firstVisit: 'first_visit',\n  sessionCount: 'session_count',\n  pageViewCount: 'page_view_count',\n  \n  // Web3 specific\n  walletAddress: 'wallet_address',\n  walletType: 'wallet_type',\n  networkChain: 'network_chain',\n  \n  // Preferences\n  theme: 'theme_preference',\n  notifications: 'notifications_enabled',\n} as const;\n\n// Conversion goals configuration\nexport const conversionGoals = {\n  primary: {\n    registration: {\n      name: 'User Registration',\n      event: analyticsEvents.registrationComplete,\n      value: 10, // USD value\n      category: eventCategories.conversion,\n    },\n    walletConnection: {\n      name: 'Wallet Connection',\n      event: analyticsEvents.walletConnect,\n      value: 15,\n      category: eventCategories.conversion,\n    },\n  },\n  \n  secondary: {\n    emailSignup: {\n      name: 'Email Signup',\n      event: analyticsEvents.emailSignup,\n      value: 5,\n      category: eventCategories.conversion,\n    },\n    demoView: {\n      name: 'Demo View',\n      event: analyticsEvents.demoView,\n      value: 2,\n      category: eventCategories.engagement,\n    },\n    socialShare: {\n      name: 'Social Share',\n      event: analyticsEvents.socialShare,\n      value: 3,\n      category: eventCategories.social,\n    },\n  },\n  \n  engagement: {\n    deepScroll: {\n      name: 'Deep Scroll (75%+)',\n      event: analyticsEvents.scrollDepth,\n      value: 1,\n      category: eventCategories.engagement,\n      condition: (properties: any) => properties.depth >= 75,\n    },\n    longSession: {\n      name: 'Long Session (5+ minutes)',\n      event: analyticsEvents.timeOnPage,\n      value: 2,\n      category: eventCategories.engagement,\n      condition: (properties: any) => properties.timeSpent >= 300,\n    },\n  },\n};\n\n// Privacy and compliance configuration\nexport const privacyConfig = {\n  // GDPR compliance\n  gdpr: {\n    enabled: true,\n    consentRequired: true,\n    consentExpiry: 365, // days\n    dataRetention: 26, // months\n  },\n  \n  // CCPA compliance\n  ccpa: {\n    enabled: true,\n    optOutEnabled: true,\n  },\n  \n  // Cookie configuration\n  cookies: {\n    essential: {\n      name: 'primebody_essential',\n      description: 'Cookies necesarias para el funcionamiento básico',\n      required: true,\n    },\n    analytics: {\n      name: 'primebody_analytics',\n      description: 'Cookies para análisis y mejora de la experiencia',\n      required: false,\n    },\n    marketing: {\n      name: 'primebody_marketing',\n      description: 'Cookies para personalización y marketing',\n      required: false,\n    },\n  },\n  \n  // Data processing purposes\n  purposes: {\n    analytics: 'Análisis de uso y mejora de la experiencia',\n    marketing: 'Personalización de contenido y marketing',\n    performance: 'Optimización del rendimiento de la aplicación',\n    security: 'Seguridad y prevención de fraude',\n  },\n};\n\n// Environment-specific configuration\nexport const getEnvironmentConfig = () => {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const isProduction = process.env.NODE_ENV === 'production';\n  const isStaging = process.env.NEXT_PUBLIC_ENVIRONMENT === 'staging';\n  \n  return {\n    environment: isDevelopment ? 'development' : isStaging ? 'staging' : 'production',\n    enableAnalytics: isProduction || (isDevelopment && defaultAnalyticsConfig.general.enableInDevelopment),\n    enableDebugMode: isDevelopment || defaultAnalyticsConfig.general.debugMode,\n    requireConsent: isProduction && defaultAnalyticsConfig.general.requireConsent,\n    enableErrorTracking: true,\n    enablePerformanceTracking: true,\n    sampleRate: isDevelopment ? 1 : isStaging ? 0.5 : 0.1, // Percentage of events to track\n  };\n};\n\n// Analytics configuration validator\nexport const validateAnalyticsConfig = (config: Partial<AnalyticsConfig>): string[] => {\n  const errors: string[] = [];\n  \n  // Validate GA4 configuration\n  if (config.ga4?.enabled && !config.ga4?.measurementId) {\n    errors.push('GA4 is enabled but measurementId is missing');\n  }\n  \n  // Validate Plausible configuration\n  if (config.plausible?.enabled && !config.plausible?.domain) {\n    errors.push('Plausible is enabled but domain is missing');\n  }\n  \n  // Validate Facebook Pixel configuration\n  if (config.facebookPixel?.enabled && !config.facebookPixel?.pixelId) {\n    errors.push('Facebook Pixel is enabled but pixelId is missing');\n  }\n  \n  // Validate custom analytics configuration\n  if (config.custom?.enabled && !config.custom?.endpoint) {\n    errors.push('Custom analytics is enabled but endpoint is missing');\n  }\n  \n  return errors;\n};\n\n// Get active analytics providers\nexport const getActiveProviders = (config: AnalyticsConfig = defaultAnalyticsConfig) => {\n  const providers = [];\n  \n  if (config.ga4.enabled) providers.push('GA4');\n  if (config.plausible.enabled) providers.push('Plausible');\n  if (config.facebookPixel.enabled) providers.push('Facebook Pixel');\n  if (config.twitterPixel.enabled) providers.push('Twitter Pixel');\n  if (config.linkedinInsight.enabled) providers.push('LinkedIn Insight');\n  if (config.hotjar.enabled) providers.push('Hotjar');\n  if (config.custom.enabled) providers.push('Custom');\n  \n  return providers;\n};\n\n// Export the configuration\nexport { defaultAnalyticsConfig as analyticsConfig };"